<?php
/*
 * –ß–∞—Å—Ç—å 4: –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ API –∫–ª–∏–µ–Ω—Ç–∞
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å —Ä–µ–∞–ª—å–Ω—ã–º API (OpenWeatherMap) —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º
 * –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö.
 */

$config = require 'config.php';
require_once 'client/WeatherApiClient.php';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–æ–ª–µ–π –≤ –æ—Ç–≤–µ—Ç–µ
function validateWeatherData(array $data): bool {
    $required_fields = [
        'body' => [
            'name',
            'main' => ['temp', 'humidity'],
            'wind' => ['speed'],
            'clouds' => ['all'],
            'weather' => [0 => ['description']]
        ]
    ];

    foreach ($required_fields as $key => $value) {
        if (!isset($data[$key])) {
            return false;
        }
        if (is_array($value)) {
            foreach ($value as $subkey => $subvalue) {
                if (is_array($subvalue)) {
                    if (!isset($data[$key][$subkey]) || !is_array($data[$key][$subkey])) {
                        return false;
                    }
                    foreach ($subvalue as $subsubkey => $subsubvalue) {
                        if (!isset($data[$key][$subkey][$subsubkey])) {
                            return false;
                        }
                    }
                } else {
                    if (!isset($data[$key][$subkey])) {
                        return false;
                    }
                }
            }
        }
    }
    return true;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞ –ø–æ–≥–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
function formatWeatherData(array $data): string
{
    if (!validateWeatherData($data)) {
        print_r($data);
        return "–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç–≤–µ—Ç–µ API\n" .
               "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å API –∫–ª—é—á–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞.\n";
    }

    $weather = $data['body'];
    return sprintf(
        "üåç –ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ %s:\n" .
        "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: %.1f¬∞C\n" .
        "üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: %d%%\n" .
        "üå™Ô∏è –í–µ—Ç–µ—Ä: %.1f –º/—Å\n" .
        "‚òÅÔ∏è –û–±–ª–∞—á–Ω–æ—Å—Ç—å: %d%%\n" .
        "üéØ –û–ø–∏—Å–∞–Ω–∏–µ: %s\n",
        $weather['name'],
        $weather['main']['temp'],
        $weather['main']['humidity'],
        $weather['wind']['speed'],
        $weather['clouds']['all'],
        $weather['weather'][0]['description']
    );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã
function formatForecast(array $data): string
{
    if (!isset($data['body']['list']) || !is_array($data['body']['list'])) {
        return "–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≥–Ω–æ–∑–∞\n" .
               "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å API –∫–ª—é—á–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞.\n";
    }

    $result = "üìÖ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ 5 –¥–Ω–µ–π:\n\n";
    $currentDate = '';

    foreach ($data['body']['list'] as $item) {
        if (!isset($item['dt'], $item['main']['temp'], $item['weather'][0]['description'])) {
            continue; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        }

        $date = date('Y-m-d', $item['dt']);
        $time = date('H:i', $item['dt']);

        if ($date !== $currentDate) {
            $currentDate = $date;
            $result .= "\nüìÜ " . date('d.m.Y', $item['dt']) . ":\n";
        }

        $result .= sprintf(
            "üïê %s: %.1f¬∞C, %s\n",
            $time,
            $item['main']['temp'],
            $item['weather'][0]['description']
        );
    }

    return $result ?: "–û—à–∏–±–∫–∞: –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞\n";
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–∏ –≤–æ–∑–¥—É—Ö–∞
function formatAirPollution(array $data): string
{
    if (!isset($data['body']['list'][0]['main']['aqi'])) {
        return "–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–∏ –≤–æ–∑–¥—É—Ö–∞\n" .
               "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å API –∫–ª—é—á–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞.\n";
    }

    $aqi = $data['body']['list'][0]['main']['aqi'];
    $quality = match($aqi) {
        1 => "–û—Ç–ª–∏—á–Ω–æ–µ üòä",
        2 => "–•–æ—Ä–æ—à–µ–µ üôÇ",
        3 => "–£–º–µ—Ä–µ–Ω–Ω–æ–µ üòê",
        4 => "–ü–ª–æ—Ö–æ–µ üò∑",
        5 => "–û—á–µ–Ω—å –ø–ª–æ—Ö–æ–µ ü§¢",
        default => "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ ‚ùì"
    };

    return sprintf(
        "üå´Ô∏è –ö–∞—á–µ—Å—Ç–≤–æ –≤–æ–∑–¥—É—Ö–∞:\n" .
        "–ò–Ω–¥–µ–∫—Å: %d\n" .
        "–û—Ü–µ–Ω–∫–∞: %s\n",
        $aqi,
        $quality
    );
}

try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
    if (empty($config['weather_api_key']) || $config['weather_api_key'] === 'YOUR_API_KEY_HERE') {
        throw new Exception(
            "API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!\n" .
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á –Ω–∞ https://openweathermap.org/api\n" .
            "–∏ –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ —Ñ–∞–π–ª config.php"
        );
    }

    // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API –ø–æ–≥–æ–¥—ã
    $weatherClient = new WeatherApiClient(
        $config['weather_api_key'],
        $config['log_file'],
        'metric',
        'ru'
    );

    // 1. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É –≤ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥–µ
    echo "=== –¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞ –≤ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥–µ ===\n";
    try {
        $weather = $weatherClient->getCurrentWeatherByCity('Kaliningrad');
        echo "\n" . formatWeatherData($weather);
    } catch (Exception $e) {
        echo "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã: " . $e->getMessage() . "\n";
    }

    // 2. –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –¥–ª—è –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥–∞
    echo "\n=== –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –¥–ª—è –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥–∞ ===\n";
    try {
        $forecast = $weatherClient->getForecastByCity('Kaliningrad');
        echo formatForecast($forecast);
    } catch (Exception $e) {
        echo "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞: " . $e->getMessage() . "\n";
    }

    // 3. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–∏ –≤–æ–∑–¥—É—Ö–∞ –≤ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥–µ
    echo "\n=== –ó–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–µ –≤–æ–∑–¥—É—Ö–∞ –≤ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥–µ ===\n";
    try {
        $pollution = $weatherClient->getAirPollution(54.7065, 20.5109);
        echo formatAirPollution($pollution);
    } catch (Exception $e) {
        echo "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–∏: " . $e->getMessage() . "\n";
    }

} catch (Exception $e) {
    echo "\n–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: " . $e->getMessage() . "\n";
}

echo "\n–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\n"; 